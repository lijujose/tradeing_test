name: try github scripts

on:
  push:
    branches:
      - master

jobs:
  try-github-script1:
    runs-on: ubuntu-latest
    steps:
      - name: Hello world
        run: echo Hello world $GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: (GET-&-PUT Github API) Push empty commit to PR branch
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const owner = context.payload.sender.login;
            const repo = context.payload.repository.name;

            console.log(owner, repo);

            const data = await github.pulls.list({
              owner,
              repo,
              base: "master",
              state: "open"
            });

            const pullRequests = data.data;

            for (pr of pullRequests) {
              try {
                let pullReq = {};
                while (pullReq.mergeable === undefined || pullReq.mergeable === null) {
                  pullReq = (
                    await github.pulls.get({
                      owner,
                      repo,
                      pull_number: pr.number
                    })
                  ).data;
                }
                if(pullReq.mergeable === false) continue;

                const {data: commitData} = await github.repos.getCommit({
                  owner,
                  repo,
                  ref: pullReq.head.sha
                });

                const {data: createdCommit} = await github.git.createCommit({
                  owner,
                  repo,
                  message: "tigger github actions",
                  tree: commitData.commit.tree.sha,
                  parents: [commitData.sha],
                  commiter: context.payload.pusher,
                  author: context.payload.pusher,
                });

                await github.git.updateRef({
                  owner,
                  repo,
                  ref: `heads/${pr.head.ref}`,
                  sha: createdCommit.sha,
                });
              } catch(err) {
                console.log(err);
              }
            }
